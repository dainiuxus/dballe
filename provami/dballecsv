#!/usr/bin/python

import sys
import os
from optparse import OptionParser

VERSION="0.1"

class Parser(OptionParser):
    def __init__(self, *args, **kwargs):
        OptionParser.__init__(self, *args, **kwargs)

    def error(self, msg):
        sys.stderr.write("%s: error: %s\n\n" % (self.get_prog_name(), msg))
        self.print_help(sys.stderr)
        sys.exit(2)

parser = Parser(usage="usage: %prog [options] key=val [key=val ...]",
                version="%prog "+ VERSION,
                description="perform common operations on a DB-ALLe database")
parser.add_option("--dsn", help="DSN to use to connect to the database (default: use DBA_DB from environment or 'test')")
parser.add_option("--user", default=os.environ['USER'], help="User name to use to connect to the database (default: %default)")
parser.add_option("--pass", default="", dest="password", help="Password to use to connect to the database (default: none)")
parser.add_option("--url", dest="url", help="Connect to a DB-All.e URL (default: none)")
parser.add_option("--file", dest="file", help="Use a SQLite file for DB-All.e database (default: none)")
parser.add_option("--all", default=False, action="store_true", help="Export all the contents of the database")

(opts, args) = parser.parse_args()

if not opts.all and len(args) == 0:
    parser.print_help()
    sys.exit(0)

import dballe, dballe.dbacsv

# Parse the query
query = dballe.Record()
for q in args:
    query.set_from_string(q)

print >>sys.stderr, query

db = dballe.DB()
if opts.dsn:
    db.connect(opts.dsn, opts.user, opts.password)
elif opts.url:
    db.connect_from_url(opts.url)
elif opts.file:
    db.connect_from_file(opts.file)
else:
    dsn = os.environ.get("DBA_DB", "test")
    if dballe.DB.is_url(dsn):
        db.connect_from_url(opts.url)
    else:
        db.connect(dsn, opts.user, opts.password)

exporter = dballe.dbacsv.export(db, query, sys.stdout)

# vim:set ts=4 sw=4 expandtab:
