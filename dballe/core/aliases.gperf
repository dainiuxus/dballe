%define slot-name alias
%define lookup-function-name dba_varcode_alias_in_word_set
%struct-type
%global-table
%compare-strncmp
/* Using %switch may be faster (remember to check when doing optimizations) */

%{
#include <string.h>
#include "dba_var.h"
%}

struct aliasdef { const char* alias; dba_varcode var; };
%%
block,			DBA_VAR(0,  1,  1)
station,		DBA_VAR(0,  1,  2)
height,			DBA_VAR(0,  7,  1)
heightbaro,		DBA_VAR(0,  7, 31)
name,			DBA_VAR(0,  1, 19)
year,			DBA_VAR(0,  4,  1)
month,			DBA_VAR(0,  4,  2)
day,			DBA_VAR(0,  4,  3)
hour,			DBA_VAR(0,  4,  4)
minute,			DBA_VAR(0,  4,  5)
lat,			DBA_VAR(0,  5,  1)
lon,			DBA_VAR(0,  6,  1)
z,				DBA_VAR(0, 10,  3)
p,				DBA_VAR(0, 10,  4)
mslp,			DBA_VAR(0, 10, 51)
u,				DBA_VAR(0, 11,  3)
v,				DBA_VAR(0, 11,  4)
t,				DBA_VAR(0, 12,  1)
td,				DBA_VAR(0, 12,  3)
tmax,			DBA_VAR(0, 12, 11)
tmin,			DBA_VAR(0, 12, 12)
q,				DBA_VAR(0, 13,  1)
rh,				DBA_VAR(0, 13,  3)
tp,				DBA_VAR(0, 13, 11)
mwd,			DBA_VAR(0, 22,  1)
swh,			DBA_VAR(0, 22, 70)
pp1d,			DBA_VAR(0, 22, 71)
mwp,			DBA_VAR(0, 22, 74)
conf,			DBA_VAR(0, 33,  7)
%%

dba_varcode dba_varcode_alias_resolve(const char* alias)
{
	struct aliasdef* res = dba_varcode_alias_in_word_set(alias, strlen(alias));
	if (res == NULL)
		return 0;
	else
		return res->var;
}

dba_varcode dba_varcode_alias_resolve_substring(const char* alias, int len)
{
	struct aliasdef* res = dba_varcode_alias_in_word_set(alias, len);
	if (res == NULL)
		return 0;
	else
		return res->var;
}

/* vim:set ts=4 sw=4: */
