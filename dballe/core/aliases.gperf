/*
 * DB-ALLe - Archive for punctual meteorological data
 *
 * Copyright (C) 2005,2006  ARPA-SIM <urpsim@smr.arpa.emr.it>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
 *
 * Author: Enrico Zini <enrico@enricozini.com>
 */

%define slot-name alias
%define lookup-function-name dba_varcode_alias_in_word_set
%struct-type
%global-table
%compare-strncmp
/* Using %switch may be faster (remember to check when doing optimizations) */

%{
#include <string.h>
#include "var.h"
%}

struct aliasdef { const char* alias; dba_varcode var; };
%%
block,			DBA_VAR(0,  1,   1)
station,		DBA_VAR(0,  1,   2)
height,			DBA_VAR(0,  7,   1)
heightbaro,		DBA_VAR(0,  7,  31)
name,			DBA_VAR(0,  1,  19)
z,			DBA_VAR(0, 10,   3)
p,			DBA_VAR(0, 10,   4)
mslp,			DBA_VAR(0, 10,  51)
u,			DBA_VAR(0, 11,   3)
v,			DBA_VAR(0, 11,   4)
t,			DBA_VAR(0, 12, 101)
td,			DBA_VAR(0, 12, 103)
tmax,			DBA_VAR(0, 12,  11)
tmin,			DBA_VAR(0, 12,  12)
q,			DBA_VAR(0, 13,   1)
rh,			DBA_VAR(0, 13,   3)
tp,			DBA_VAR(0, 13,  11)
mwd,			DBA_VAR(0, 22,   1)
swh,			DBA_VAR(0, 22,  70)
pp1d,			DBA_VAR(0, 22,  71)
mwp,			DBA_VAR(0, 22,  74)
conf,			DBA_VAR(0, 33,   7)
data_id,		DBA_VAR(0, 33, 195)
no,			DBA_VAR(0, 15, 192)
no2,			DBA_VAR(0, 15, 193)
o3,			DBA_VAR(0, 15, 194)
pm10,			DBA_VAR(0, 15, 195)
%%

dba_varcode dba_varcode_alias_resolve(const char* alias)
{
	struct aliasdef* res = dba_varcode_alias_in_word_set(alias, strlen(alias));
	if (res == NULL)
		return 0;
	else
		return res->var;
}

dba_varcode dba_varcode_alias_resolve_substring(const char* alias, int len)
{
	struct aliasdef* res = dba_varcode_alias_in_word_set(alias, len);
	if (res == NULL)
		return 0;
	else
		return res->var;
}

/* vim:set ts=4 sw=4: */
